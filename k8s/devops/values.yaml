appEnvironments:
  devops:
    argoHostname: aws-eks-serverless-poc-argocd.bsisandbox.com
    awsAccountNumber: '704855531002'
    monitoringHostname: aws-eks-serverless-poc-monitoring.bsisandbox.com
    publicDomain: bsisandbox.com #Domain for DNS records
    publicDomainId: Z0513001X3L0IE4KY37F #Route 53 Zone ID
    repoUrl: https://github.com/semperfitodd/aws_eks_serverless_poc.git
    clusterAutoscaler:
      values:
        extraArgs:
          expander: priority
        expanderPriorities: |-
          10: 
            - .*m5\.2xlarge.*
          100: 
            - .*t3\.medium.*
        autoDiscovery:
          clusterName: aws-eks-serverless-poc
        awsRegion: us-east-2
        image:
          tag: v1.20.3
        rbac:
          serviceAccount:
            name: cluster-autoscaler
            annotations:
              eks.amazonaws.com/role-arn: arn:aws:iam::704855531002:role/cluster_autoscaler
    prometheus:
      values:
        prometheus:
          url: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local
          port: 9090
        rules:
          custom:
            - seriesQuery: '{__name__=~"^http_server_requests_seconds_count$"}'
              resources:
                template: <<.Resource>>
              name:
                matches: "^(.*)_total"
                as: "http_requests_per_minute"
              metricsQuery: 'sum(rate(http_server_requests_seconds_count{<<.LabelMatchers>>}[1m])) by (pod)'
    prometheusStack:
      values:
        prometheus:
          prometheusSpec:
            namespaceSelector:
              matchNames:
                - springboot
            serviceMonitorSelector:
              matchLabels:
                monitoring: prometheus
            rules:
              groups:
                - name: springboot_http_requests
                  rules:
                    - record: http_requests_per_minute
                      expr: sum(rate(http_server_requests_seconds_count[1m])) by (pod)