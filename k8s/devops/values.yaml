appEnvironments:
  devops:
    argoHostname: aws-eks-serverless-poc-argocd.bsisandbox.com
    awsAccountNumber: '704855531002'
    monitoringHostname: aws-eks-serverless-poc-monitoring.bsisandbox.com
    publicDomain: bsisandbox.com #Domain for DNS records
    publicDomainId: Z0513001X3L0IE4KY37F #Route 53 Zone ID
    repoUrl: https://github.com/semperfitodd/aws_eks_serverless_poc.git
    clusterAutoscaler:
      values:
        extraArgs:
          expander: priority
        expanderPriorities: |-
          10: 
            - .*m5\.2xlarge.*
          100: 
            - .*t3\.medium.*
        autoDiscovery:
          clusterName: aws-eks-serverless-poc
        awsRegion: us-east-2
        image:
          tag: v1.20.3
        rbac:
          serviceAccount:
            name: cluster-autoscaler
            annotations:
              eks.amazonaws.com/role-arn: arn:aws:iam::704855531002:role/cluster_autoscaler
    prometheus:
      values:
        extraVolumeMounts:
          - mountPath: /etc/adapter
            name: adapter-config
        extraVolumes:
          - configMap:
              name: prometheus-adapter
            name: adapter-config
        prometheus:
          port: 9090
          url: http://prometheus-stack-kube-prom-prometheus.monitoring.svc.cluster.local
        rules:
          custom:
            - seriesQuery: '{__name__=~"^http_server_requests_seconds_count$", job="springboot-1-service-monitor"}'
              resources:
                overrides:
                  job: { resource: "service" }
                  instance: { resource: "pod" }
              name:
                as: "springboot_http_requests"
                matches: ".*"
              metricsQuery: 'sum(rate(<<.Series>>[10s])) by (<<.GroupBy>>)'
    prometheusStack:
      values:
        prometheus:
          additionalScrapeConfigs:
            - honor_labels: true
              job_name: springboot-1-service-monitor
              kubernetes_sd_configs:
                - namespaces:
                    names:
                      - springboot
                  role: endpoints
              metrics_path: /actuator/prometheus
              relabel_configs:
                - action: keep
                  regex: springboot-1|http
                  source_labels:
                    - __meta_kubernetes_service_name
                    - __meta_kubernetes_endpoint_port_name
              metric_relabel_configs:
                - source_labels: [ __name__ ]
                  regex: 'http_server_requests_seconds_count'
                  target_label: __name__
                  replacement: 'springboot_http_requests'
          prometheusSpec:
            rules:
              groups:
                - name: http_requests_per_minute
                  rules:
                    - expr: sum(rate(springboot_http_requests[1m])) by (pod)
                      record: http_requests_per_minute
            serviceMonitorSelector:
              matchExpressions:
                - key: kubernetes.io/name
                  operator: In
                  values:
                    - springboot-1
                - key: kubernetes.io/cluster-service
                  operator: NotExists
              matchLabels:
                app: springboot-1